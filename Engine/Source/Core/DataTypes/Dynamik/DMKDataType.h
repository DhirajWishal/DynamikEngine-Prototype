#pragma once
#ifndef _DYNAMIK_DATA_TYPE_H
#define _DYNAMIK_DATA_TYPE_H

#include "Public/datatypes.h"

namespace Dynamik {
	/* Data types enum for the Dynamik Engine 
	 * DMK_TYPE_NAME = BYTE_SIZE
	 */
	enum class DMKDataType : UI32 {
		DMK_DATA_TYPE_UNDEFINED = 0,

		DMK_DATA_TYPE_BYTE = 1,

		DMK_DATA_TYPE_I8 = 1,
		DMK_DATA_TYPE_UI8 = 1,
		DMK_DATA_TYPE_SI8 = 1,
		DMK_DATA_TYPE_I16 = 2,
		DMK_DATA_TYPE_UI16 = 2,
		DMK_DATA_TYPE_SI16 = 2,
		DMK_DATA_TYPE_I32 = 4,
		DMK_DATA_TYPE_UI32 = 4,
		DMK_DATA_TYPE_SI32 = 4,
		DMK_DATA_TYPE_I64 = 8,
		DMK_DATA_TYPE_UI64 = 8,
		DMK_DATA_TYPE_SI64 = 8,

		DMK_DATA_TYPE_F32 = 4,
		DMK_DATA_TYPE_D64 = 8,
		DMK_DATA_TYPE_CHR = 1,

		DMK_DATA_TYPE_PTR = 8,
		DMK_DATA_TYPE_VPTR = 8,

		DMK_DATA_TYPE_VEC1 = 4,
		DMK_DATA_TYPE_VEC2 = 8,
		DMK_DATA_TYPE_VEC3 = 16,
		DMK_DATA_TYPE_VEC4 = 16,
		DMK_DATA_TYPE_UVEC1 = 4,
		DMK_DATA_TYPE_UVEC2 = 8,
		DMK_DATA_TYPE_UVEC3 = 16,
		DMK_DATA_TYPE_UVEC4 = 16,
		DMK_DATA_TYPE_SVEC1 = 4, 
		DMK_DATA_TYPE_SVEC2 = 8, 
		DMK_DATA_TYPE_SVEC3 = 16,
		DMK_DATA_TYPE_SVEC4 = 16,
		DMK_DATA_TYPE_BVEC1 = 1,
		DMK_DATA_TYPE_BVEC2 = 2,
		DMK_DATA_TYPE_BVEC3 = 3,
		DMK_DATA_TYPE_BVEC4 = 4,

		DMK_DATA_TYPE_MAT2 = 16,
		DMK_DATA_TYPE_MAT3 = 36,
		DMK_DATA_TYPE_MAT4 = 64,
	};

	struct DMKVirtualDataContainer {
		DMKDataType type = DMKDataType::DMK_DATA_TYPE_UNDEFINED;
		VPTR data = nullptr;
	};
}

#endif // !_DYNAMIK_DATA_TYPE_H
