#pragma once

/*
 Main template for the resource manager.
 Impliment a customized manager for each individual project.

 Author:	Dhiraj Wishal
 Project:	Dynamik Engine
 Date:		02/12/2019
 IDE:		MS Visual Studio Community 2019

 Manager.h file
*/

#ifndef _DYNAMIK_CENTRAL_DATA_HUB_MANAGER_H
#define _DYNAMIK_CENTRAL_DATA_HUB_MANAGER_H

#include <string>
#include <vector>
#include <deque>

#include "core//data store/containers.h"

#define _SET_VECTOR(x)	std::vector<x>
#define _SET_2D_VECTOR(x)	std::vector<std::vector<x>>

namespace Dynamik {
	namespace ADGR {
		namespace core {
			enum DMKManagerResourceType {
				// ADGR
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_DATA_CONTAINER,

				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_INSTANCE,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_DEVICE,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_PHYSICAL_DEVICE,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_WINDOW,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_SURFACE,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_DEBUGGER,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_SWAPCHAIN,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_SWAPCHAIN_IMAGES,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_SWAPCHAIN_IMAGE_FORMAT,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_SWAPCHAIN_EXTENT,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_SWAPCHAIN_IMAGE_VIEWS,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_SHADER_PATH,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_SHADER_MODULE_VERTEX,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_SHADER_MODULE_TESSELLATION,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_SHADER_MODULE_GEOMETRY,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_SHADER_MODULE_FRAGMENT,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_PIPELINE_RENDER_PASS,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_PIPELINE,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_PIPELINE_LAYOUT,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_COLOR_BUFFER,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_COLOR_BUFFER_IMAGE,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_COLOR_BUFFER_IMAGE_MEMORY,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_COLOR_BUFFER_IMAGE_VIEW,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_DEPTH_BUFFER,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_DEPTH_BUFFER_IMAGE,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_DEPTH_BUFFER_IMAGE_MEMORY,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_DEPTH_BUFFER_IMAGE_VIEW,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_FRAME_BUFFER,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_TEXTURE_IMAGE,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_TEXTURE_IMAGE_MEMORY,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_TEXTURE_IMAGE_SAMPLER,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_TEXTURE_IMAGE_VIEW,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_VERTEX_BUFFER,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_VERTEX_BUFFER_OBJECT,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_VERTEX_BUFFER_MEMORY,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_INDEX_BUFFER,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_INDEX_BUFFER_OBJECT,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_INDEX_BUFFER_MEMORY,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_UNIFORM_BUFFER,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_UNIFORM_BUFFER_MEMORIES,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_DESCRIPTOR_SET_LAYOUT,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_DESCRIPTOR_POOL,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_DESCRIPTOR_SET,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_COMMAND_POOL,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_COMMAND_BUFFER,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_SEMAPHORE_IMAGE_AVAILABLE,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_SEMAPHORE_RENDER_FINISHED,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_FENCE_IN_FLIGHT,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_QUEUE_GRAPHICS,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_QUEUE_PRESENT,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_PUSH_COMMAND,

				DMK_CDH_MANAGER_RESOURCE_TYPE_ICON,

				DMK_CDH_MANAGER_RESOURCE_TYPE_GAME_OBJECT,
				DMK_CDH_MANAGER_RESOURCE_TYPE_INTERNAL_OBJECT_FORMAT,
				DMK_CDH_MANAGER_RESOURCE_TYPE_RENDERER_OBJECT_FORMAT,
				DMK_CDH_MANAGER_RESOURCE_TYPE_VULKAN_OBJECT_FORMAT,
				DMK_CDH_MANAGER_RESOURCE_TYPE_OBJECT_DATA_CONTAINER,
				DMK_CDH_MANAGER_RESOURCE_TYPE_RENDER_DATA_CONTAINER,

				DMK_CDH_MANAGER_RESOURCE_TYPE_PATH_MODEL,
				DMK_CDH_MANAGER_RESOURCE_TYPE_PATH_TEXTURE,
				DMK_CDH_MANAGER_RESOURCE_TYPE_PATH_ICON,
				DMK_CDH_MANAGER_RESOURCE_TYPE_PATH_SCRIPT,
				DMK_CDH_MANAGER_RESOURCE_TYPE_PATH_ASSET_INDEX_PATH,

				// AUDIO
				DMK_CDH_MANAGER_RESOURCE_TYPE_AUDIO,
				DMK_CDH_MANAGER_RESOURCE_TYPE_PATH_AUDIO,
				DMK_CDH_MANAGER_RESOURCE_TYPE_PATH_AUDIO_CLIP,

				// EVENT
				DMK_CDH_MANAGER_RESOURCE_TYPE_EVENT,
				DMK_CDH_MANAGER_RESOURCE_TYPE_EVENT_APPLICATION,
				DMK_CDH_MANAGER_RESOURCE_TYPE_EVENT_KEYBOARD,
				DMK_CDH_MANAGER_RESOURCE_TYPE_EVENT_MOUSE,
				DMK_CDH_MANAGER_RESOURCE_TYPE_EVENT_CONTAINER,

				// NETWORKING
				DMK_CDH_MANAGER_RESOURCE_TYPE_SOCKET,
				DMK_CDH_MANAGER_RESOURCE_TYPE_IP_ADDRESS,
				DMK_CDH_MANAGER_RESOURCE_TYPE_PORT,

				// GLOBAL
				DMK_CDH_MANAGER_RESOURCE_TYPE_GLOBAL,
				DMK_CDH_MANAGER_RESOURCE_TYPE_UNKNOWN
			};

			class Manager {
			public:
				Manager() {}
				virtual ~Manager() {
				}

				// event manager
				void addEvent(DMKEventContainer& event) { eventContainer.push_back(event); }
				void setEventContainer(std::deque<DMKEventContainer>& container) { eventContainer = container; }
				std::deque<DMKEventContainer> getEventContainer() { return eventContainer; }
				std::deque<DMKEventContainer>* getEventContainerAddr() { return &eventContainer; }

				// Global/ Public variable to store an address
				const void* globalPointer = nullptr;

			protected:
				virtual const void* _resource(DMKManagerResourceType type) { return nullptr; }

				_SET_VECTOR(void*) global = {};
				_SET_2D_VECTOR(void*) unknown = {};
				std::deque<DMKEventContainer> eventContainer;
			};
		}
	}
}

#endif	// !_DYNAMIK_CENTRAL_DATA_HUB_MANAGER_H
